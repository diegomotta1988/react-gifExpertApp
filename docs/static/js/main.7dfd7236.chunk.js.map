{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","API_KEY","a","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAIhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,OCJdG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAO,uCAAG,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,6DACfP,EADe,iDACiCK,EADjC,6BAC8DC,GAD9D,SAEFE,MAAMR,GAFJ,cAEfS,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC9BhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QARf,kBAWdY,GAXc,4CAAH,wDCKPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAExB,ECJ0B,SAACA,GAC3B,IACA,EAA0BrB,mBAAS,CAAE+B,OAAQ,GAAIG,SAAS,IAA1D,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OANAC,qBAAU,WACRjB,EAAQC,EAJM,oCAIaiB,MAAK,SAACP,GAC/BK,EAAS,CAAEL,SAAQG,SAAS,SAE7B,CAACb,IAEGc,EDNqBI,CAAalB,GAAjCU,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,QAKhB,OACE,qCACE,oBAAIjB,UAAU,oCAAd,SAAmDI,IAClDa,GAAW,mBAAGjB,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACGc,EAAOF,KAAI,SAACC,GAAD,OACV,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBU,IAAKV,EAAIhB,eEc1B2B,EA5BM,WACnB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BACGS,EAAWqB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MChB5CqB,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.7dfd7236.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='text' value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: propTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","export const getGifs = async (category, API_KEY) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=${API_KEY}`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url,\r\n  }));\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from './../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  // const [images, setImages] = useState([]);\r\n  const { images, loading } = useFetchGifs(category);\r\n  // Al pasarle las dependencias como [] s√≥lo se ejecuta al renderizarse por primera vez el componente\r\n\r\n  const API_KEY = 'jK8GqN6qzwSVhjjH1UwKaRNVqJijd5Ig';\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n      {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n      <div className='card-grid'>\r\n        {images.map((img) => (\r\n          <GifGridItem {...img} key={img.id} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const API_KEY = 'jK8GqN6qzwSVhjjH1UwKaRNVqJijd5Ig';\r\n  const [state, setState] = useState({ images: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    getGifs(category, API_KEY).then((images) => {\r\n      setState({ images, loading: false });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories([...categories, 'HunterXHunter']);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid category={category} key={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\n// CounterApp.propTypes = {\r\n//   value: propTypes.number,\r\n// };\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}